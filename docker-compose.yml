services:

  postgres-db:
    container_name: postgres
    image: postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=0101
      - POSTGRES_DB=auth_exam
    ports:
      - "5434:5432"
    volumes:
      - db:/var/lib/postgresql/data 
    networks:
      - carwash
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 5s

  migrate:
    image: migrate/migrate
    command: [
      "-path", "/migrations",
      "-database", "postgres://postgres:0101@postgres:5432/auth_exam?sslmode=disable",
      "up"
    ]
    volumes:
      - ./auth/migrations:/migrations
    networks:
      - carwash
    depends_on:
      - postgres-db

  mongodb:
    container_name: mongodb
    image: mongo
    environment:
      - MONGO_INITDB_ROOT_USERNAME=mongodb
      - MONGO_INITDB_ROOT_PASSWORD=0101
    ports:
      - "27018:27017"
    volumes:
      - mongo-data:/data/db
    networks:
      - carwash
    healthcheck:
      test: ["CMD-SHELL", "mongo --eval 'db.runCommand(\"ping\").ok'"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 5s

  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    ports:
      - "5674:5672"
    networks:
      - carwash
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 5s

  auth:
    container_name: auth
    build: ./auth
    depends_on:
      - postgres-db
      - migrate
    ports:
      - "8082:8081"
    networks:
     - carwash
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8081/health || exit 1"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 5s

  booking:
    container_name: booking
    build: ./booking_service
    depends_on:
      - rabbitmq
      - mongodb
    ports:
      - "50054:50053"
    networks:
      - carwash
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:50053/health || exit 1"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 5s

  gateway:
    container_name: gateway
    build: ./api-gateway
    depends_on:
      - auth
      - booking
      - rabbitmq
    ports:
      - "9091:9090"
    networks:
      - carwash
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9090/health || exit 1"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 5s

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6380:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - carwash

networks:
  carwash:
    name: carwash
    external: true

volumes:
  mongo-data:
  db: