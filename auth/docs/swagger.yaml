basePath: /auth
definitions:
  model.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  model.LogoutRequest:
    properties:
      refresh_token:
        type: string
    type: object
  model.LogoutResponse:
    properties:
      message:
        type: string
    type: object
  model.Tokens:
    properties:
      access_token:
        type: string
      expires_at:
        type: string
      refresh_token:
        type: string
    type: object
  user.RegisterRequest:
    properties:
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      password:
        type: string
      phone_number:
        type: string
      role:
        type: string
    type: object
  user.RegisterResponse:
    properties:
      created_at:
        type: string
      first_name:
        type: string
      id:
        type: string
      last_name:
        type: string
      phone_number:
        type: string
    type: object
host: localhost:8081
info:
  contact:
    email: support@swagger.io
    name: API Support
  description: This is an API for user authentication.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  version: "1.0"
paths:
  /login:
    post:
      consumes:
      - application/json
      description: Login
      operationId: login
      parameters:
      - description: User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Tokens'
        "400":
          description: Invalid Argument
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Login
  /logout:
    post:
      consumes:
      - application/json
      description: LogOut a user
      parameters:
      - description: User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.LogoutRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.LogoutResponse'
        "400":
          description: Invalid Argument
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: LogOut a user
      tags:
      - auth
  /register:
    post:
      consumes:
      - application/json
      description: Register
      operationId: register
      parameters:
      - description: User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/user.RegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.RegisterResponse'
        "400":
          description: Invalid Argument
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Register
swagger: "2.0"
